//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIRS.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IIRSEntities : DbContext
    {
        public IIRSEntities()
            : base("name=IIRSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<File> Files { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<UserInRole> UserInRoles { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
    
        public virtual ObjectResult<GetCustomer_Result> GetCustomer(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomer_Result>("GetCustomer", nameParameter);
        }
    
        public virtual ObjectResult<GetAdminFiles_Result> GetAdminFiles(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminFiles_Result>("GetAdminFiles", searchParameter);
        }
    
        public virtual ObjectResult<GetFiles_Result> GetFiles(string search, Nullable<int> userId)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFiles_Result>("GetFiles", searchParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetOrders_Result> SP_GetOrders(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrders_Result>("SP_GetOrders", userIdParameter);
        }
    
        public virtual ObjectResult<GetDepartmentOrders_Result> GetDepartmentOrders(Nullable<int> departmentUserId)
        {
            var departmentUserIdParameter = departmentUserId.HasValue ?
                new ObjectParameter("DepartmentUserId", departmentUserId) :
                new ObjectParameter("DepartmentUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDepartmentOrders_Result>("GetDepartmentOrders", departmentUserIdParameter);
        }
    
        public virtual ObjectResult<SP_GetComments_Result> SP_GetComments(Nullable<int> userId, Nullable<int> orderId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetComments_Result>("SP_GetComments", userIdParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<GetAdminOrders_Result> GetAdminOrders(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminOrders_Result>("GetAdminOrders", searchParameter);
        }
    }
}
